{"version":3,"sources":["actions/postsAction.js","components/PostList.js","components/ToDoList.js","actions/todoAction.js","components/UserPosts.js","actions/getUserPostsAction.js","components/UserAlbums.js","actions/getUserAlbumsAction.js","components/UserToDo.js","actions/getUserToDoAction.js","components/UserInfo.js","actions/getUserInfoAction.js","components/Users.js","actions/userAction.js","components/UserList.js","components/Navigation.js","components/Form.js","components/formValues.js","App.js","reducers/addPost.js","reducers/addToDo.js","reducers/addUser.js","reducers/getUserInfoReducer.js","reducers/getUserPostsReducer.js","reducers/getUserAlbumsReducer.js","reducers/getUserToDoReducer.js","reducers/index.js","index.js"],"names":["data","a","fetch","method","body","JSON","stringify","title","userId","headers","response","json","PostList","postData","fetchPosts","handleSubmit","addPost","useEffect","loading","error","onSubmit","values","submitToServer","then","className","htmlFor","Field","name","component","type","posts","map","post","id","reduxForm","form","connect","state","postList","dispatch","payload","catch","failFetchPosts","todoData","toDoList","fetchTodos","failFetchTodods","todos","item","completed","userPosts","fetchUserPosts","dispacth","useParams","useRouteMatch","url","path","userAlbums","fetchUserAlbums","fetchUsersAlbums","album","userToDo","fetchUserToDo","todo","readOnly","checked","userinfo","userInfo","user","getUserInfo","fetchUserInfo","useState","currentTab","setCurrentTab","tabList","label","content","email","phone","address","street","city","zipcode","website","company","bs","catchPhrase","tab","i","onClick","userData","userList","fetchUsers","res","failFetchUsers","users","username","to","UserList","exact","Users","UserInfo","Navigation","Forms","submit","selector","getFormValues","String","App","initialState","addPostReducer","action","addToDoReducer","addUserReducer","getUserInfoReducer","getUserPostsReducer","getUserAlbumsReducer","getUserToDoReducer","allReducers","combineReducers","formReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d2c1b63.chunk.js","sourcesContent":["export const startFetchPosts = () => {\r\n    return {\r\n        type: 'FETCH_POSTS_REQUEST',\r\n    }\r\n}\r\n\r\nexport const successFetchPosts = (data) => {\r\n    return{\r\n        type: \"FETCH_POSTS_SUCCESS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const failFetchPosts = (error) => {\r\n    return {\r\n        type: \"FETCH_POSTS_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\nexport const addPost = (postData) => {\r\n    return {\r\n        type: \"ADD_POST\",\r\n        payload: postData\r\n    }\r\n}\r\nexport const fetchPosts = () => {\r\n    return function (dispatch) {\r\n        dispatch(startFetchPosts()) \r\n        return fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n            .then(response => response.json())\r\n            .then(json => dispatch(successFetchPosts(json)) )\r\n            .catch(error => dispatch(failFetchPosts(error)))\r\n    }\r\n}\r\nexport async function submitToServer(data) {\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n         method: 'POST',\r\n         body: JSON.stringify({\r\n           title: data.title,\r\n           body: data.body,\r\n           userId: data.userId ,\r\n         }),\r\n         headers: {\r\n           'Content-type': 'application/json; charset=UTF-8',\r\n         },\r\n       })\r\n       return response.json();\r\n   }","import  React, {useEffect}  from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts, addPost, submitToServer } from '../actions/postsAction';\r\nimport {Field, reduxForm } from 'redux-form';\r\n\r\nfunction PostList({postData, fetchPosts, handleSubmit, addPost}) {\r\n    \r\n  useEffect(() => {\r\n    fetchPosts()\r\n  },[])\r\n\r\n\r\n  function submit(values) {\r\n    submitToServer(values).then(data => addPost(data))\r\n  } \r\n\r\n  return postData.loading ? (\r\n    <h2>Loading ...</h2>) \r\n    : postData.error ? (\r\n      <h2>{postData.error}</h2>\r\n    ) : (\r\n      <div>\r\n        <h2>Post List</h2>\r\n        <form onSubmit={handleSubmit(submit)} className=\"post-form\">\r\n          <div className=\"post-form__item\">\r\n            <label htmlFor=\"firstName\">User Id</label>\r\n            <Field name=\"userId\" component=\"input\" type=\"text\" />\r\n          </div>\r\n          <div className=\"post-form__item\">\r\n            <label htmlFor=\"lastName\">Title</label>\r\n            <Field name=\"title\" component=\"input\" type=\"text\" />\r\n          </div>\r\n          <div className=\"post-form__item\">\r\n            <label htmlFor=\"email\">Body</label>\r\n            <Field name=\"body\" component=\"input\" type=\"text\" />\r\n          </div>\r\n          <button className=\"post-form__btn\" type=\"submit\">Add post</button>\r\n        </form>\r\n        <div>\r\n          {postData.posts.map(post => <p key={post.id} >{post.title}</p>)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postData: state.postList\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    addPost: (data) => dispatch(addPost(data)),\r\n    fetchPosts: () => dispatch(fetchPosts())\r\n  }\r\n}\r\nPostList = reduxForm({\r\n  form: 'addPostItem'\r\n})(PostList)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList)","import  React, { useEffect }  from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTodos } from '../actions/todoAction'\r\n\r\n function ToDoList({todoData, fetchTodos}) { \r\n    \r\n    useEffect(() => {\r\n     fetchTodos()\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n          <h2>To Do List</h2>\r\n            {todoData.todos.map((item) => {\r\n              return <div key={item.id}>\r\n                  <p>{item.id}. {item.title}</p>\r\n                  <span>{item.completed}</span>\r\n              </div>\r\n            })}\r\n        </div>\r\n      )\r\n }\r\n\r\n const mapStateToProps = (state) => {\r\n   return{\r\n    todoData: state.toDoList\r\n   }\r\n }\r\n const mapDispatchToProps = dispatch => {\r\n   return{\r\n     fetchTodos: () => dispatch(fetchTodos())\r\n   }\r\n }\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(ToDoList)","export const startFetchTodos = () => {\r\n    return{\r\n        type: \"FETCH_TODOS_REQUEST\"\r\n    }\r\n}\r\nexport const successFetchTodos = (data) => {\r\n    return {\r\n        type: \"FETCH_TODOS_SUCCESS\",\r\n        payload: data\r\n    }\r\n}\r\nexport const failFetchTodods = (error) => {\r\n    return {\r\n        type: \"FETCH_TODOS_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\nexport const fetchTodos = () => {\r\n    return function (dispatch) {  \r\n        dispatch(startFetchTodos())\r\n        return fetch('https://jsonplaceholder.typicode.com/todos')\r\n        .then(response => response.json())\r\n        .then(json => dispatch(successFetchTodos(json)) )\r\n        .catch(error => dispatch(failFetchTodods(error)))\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { fetchUserPosts } from '../actions/getUserPostsAction';\r\n\r\nfunction UserPosts({userPosts, fetchUserPosts}) { \r\n    const { id } = useParams();\r\n    const { url, path } = useRouteMatch();\r\n\r\n    useEffect(() => {\r\n        fetchUserPosts(id)\r\n    },[])\r\n\r\n    return (\r\n        userPosts.map((post, id) => {\r\n            return <div className=\"post-item\" key={id}>\r\n                <p>Title: {post.title}</p>\r\n                <p>{post.body}</p>\r\n            </div>\r\n        })\r\n    )\r\n }\r\n const mapStateToProps = state => {\r\n     return{\r\n         userPosts: state.userPosts\r\n     }\r\n }\r\n\r\n const mapDispatchToProps = dispatch => {\r\n     return {\r\n         fetchUserPosts: (userId) => dispatch(fetchUserPosts(userId))\r\n     }\r\n }\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\r\n","export const getUserPosts = (data) => {\r\n    return {\r\n        type: \"GET_USER_POSTS\",\r\n        payload: data\r\n    }\r\n}\r\nexport const fetchUserPosts = (userId) => {\r\n    return dispacth => {\r\n        return fetch(`https://jsonplaceholder.typicode.com/users/${userId}/posts`)\r\n        .then(data => data.json())\r\n        .then(json => dispacth(getUserPosts(json)) )\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchUsersAlbums } from '../actions/getUserAlbumsAction';\r\n\r\n\r\nfunction UserAlbums({userAlbums, fetchUserAlbums}) { \r\n    const { id } = useParams();    \r\n\r\n    useEffect(() => {\r\n        fetchUserAlbums(id)\r\n    }, [])\r\n\r\n    return (\r\n        userAlbums.map((album,id) => {\r\n            return <div className=\"user-album\" key={id}>\r\n                <p>Album: {album.title}</p>\r\n            </div>\r\n        })\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userAlbums: state.userAlbums\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUserAlbums: (userId) => dispatch(fetchUsersAlbums(userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAlbums)","export const getUserAlbums = (data) => {\r\n    return {\r\n        type: \"GET_USER_ALBUMS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchUsersAlbums = (userId) => {\r\n    return dispacth => {\r\n        return fetch(`https://jsonplaceholder.typicode.com/users/${userId}/albums`)\r\n        .then(data => data.json())\r\n        .then(json => dispacth(getUserAlbums(json)))\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { fetchUserToDo } from '../actions/getUserToDoAction';\r\n\r\n\r\nfunction UserToDo({userToDo, fetchUserToDo}) { \r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        fetchUserToDo(id)\r\n    }, [])\r\n\r\n    return (\r\n        userToDo.map((todo, id) => {\r\n            return  <div>\r\n                \r\n                    { todo.completed ? (\r\n                        <div className=\"todo-group\" key={id}> \r\n                        <input type=\"checkbox\" id={id} readOnly checked/>\r\n                        <label htmlFor={id}>{todo.title}</label>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"todo-group\" key={id}> \r\n                        <input type=\"checkbox\" id={id}/>\r\n                        <label htmlFor={id}>{todo.title}</label>\r\n                        </div>\r\n                    ) }\r\n            \r\n            </div>\r\n            \r\n        })\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        userToDo: state.userToDo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUserToDo: (userId) => dispatch(fetchUserToDo(userId))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UserToDo)","export const getUserToDo = (data) => {\r\n    return {\r\n        type:  \"GET_USER_TODO\",\r\n        payload: data\r\n    }\r\n}\r\nexport const fetchUserToDo = (userId) => {\r\n    return dispacth => {\r\n        return fetch(`https://jsonplaceholder.typicode.com/users/${userId}/todos`)\r\n        .then(data => data.json())\r\n        .then(json => dispacth(getUserToDo(json)) )\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchUserInfo } from '../actions/getUserInfoAction';\r\nimport { Route, Switch, NavLink, Link, useRouteMatch } from 'react-router-dom'\r\nimport UserPosts from './UserPosts';\r\nimport UserAlbums from './UserAlbums';\r\nimport UserToDo from './UserToDo'\r\n\r\n\r\n function Userinfo({ userinfo, getUserInfo }) {\r\n    const { id } = useParams();\r\n    const { url, path } = useRouteMatch();\r\n\r\n    const [currentTab, setCurrentTab] = useState('UserPosts');\r\n\r\n    const tabList = [\r\n        {\r\n            name: 'UserPosts',\r\n            label: 'Posts',\r\n            content: <UserPosts />\r\n        },\r\n        {\r\n            name: 'UserAlbums',\r\n            label: 'Albums',\r\n            content: <UserAlbums />\r\n        },\r\n        {\r\n            name: 'UserToDo',\r\n            label: 'To do',\r\n            content: <UserToDo />\r\n        },\r\n\r\n    ]\r\n\r\n    useEffect(() => {\r\n        getUserInfo(id)\r\n    }, [])\r\n    \r\n    return (\r\n    <div><h2>User info</h2>\r\n        \r\n            {userinfo.map(user => {\r\n                return <ul className=\"userinfo\">\r\n                    <li className=\"userinfo__item\">\r\n                        <span className=\"userinfo__icon\"><i className=\"zmdi zmdi-email zmdi-hc-2x\"></i></span>\r\n                        <div className=\"userinfo__details\">\r\n                            <p>{user.email}</p>\r\n                            <span>Email</span>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"userinfo__item\">\r\n                    <span className=\"userinfo__icon\"><i className=\"zmdi zmdi-phone zmdi-hc-2x\"></i></span>\r\n                    <div className=\"userinfo__details\">\r\n                        <p>{user.phone}</p>\r\n                        <span>Mobile</span>\r\n                    </div>\r\n                </li>\r\n                <li className=\"userinfo__item\">\r\n                    <span className=\"userinfo__icon\"><i className=\"zmdi zmdi-pin zmdi-hc-2x\"></i></span>\r\n                    <div className=\"userinfo__details\">\r\n                        <p>{user.address.street}, {user.address.city}, {user.address.zipcode}</p>\r\n                        <span>Work</span>\r\n                    </div>\r\n                </li>\r\n            \r\n                <li className=\"userinfo__item\">\r\n                    <span className=\"userinfo__icon\"><i className=\"zmdi zmdi-instagram zmdi-hc-2x\"></i></span>\r\n                    <div className=\"userinfo__details\">\r\n                        <p>@{user.website}</p>\r\n                        <span>Social Channels</span>\r\n                    </div>\r\n                </li>\r\n            \r\n                <li className=\"userinfo__item\">\r\n                    <span className=\"userinfo__icon\"><i className=\"zmdi zmdi-ungroup zmdi-hc-2x\"></i></span>\r\n                    <div className=\"userinfo__details\">\r\n                        <p>{user.company.bs}, {user.company.catchPhrase}</p>\r\n                        <span>Segments</span>\r\n                    </div>\r\n                </li>\r\n                </ul>\r\n            })}\r\n\r\n        <div>\r\n            {tabList.map((tab, i) => (\r\n                <a \r\n                    key={i}\r\n                    onClick={() => setCurrentTab(tab.name)} \r\n                    className={(tab.name === currentTab) ? 'active tab' : 'tab'}>\r\n                    {tab.label}\r\n                </a>\r\n                )\r\n            )}\r\n\r\n            {tabList.map((tab, i) => {\r\n                if(tab.name === currentTab) {\r\n                    return <div key={i}>{tab.content}</div>;\r\n                } else {\r\n                    return null;\r\n                }\r\n            })}\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userinfo: state.userInfo.user\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getUserInfo: (userId) => dispatch(fetchUserInfo(userId))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Userinfo)","export const getUserInfo = (data) => {\r\n    return {\r\n        type: \"GET_INFO\",\r\n        payload: data\r\n    }\r\n}\r\nexport const fetchUserInfo = (userId) => {\r\n    return function (dispatch) {\r\n        return fetch(`https://jsonplaceholder.typicode.com/users/${userId}`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(getUserInfo(json)))\r\n    }\r\n}","import  React, {useEffect}  from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link, useRouteMatch} from \"react-router-dom\";\r\nimport { fetchUsers } from '../actions/userAction';\r\n\r\n\r\n function Users({userData, fetchUsers}) {\r\n\r\n    useEffect(() => {\r\n        fetchUsers()\r\n      },[])\r\n\r\n    const { url } = useRouteMatch();\r\n\r\n    return userData.loading ? (\r\n    <h2>Loading ...</h2>) \r\n    : userData.error ? (\r\n      <h2>{userData.error}</h2>\r\n    ) : (\r\n      <div>\r\n        <h2>Users List</h2>\r\n        <div>\r\n          {userData.users.map( ({name, id, username}) => \r\n          <p key={id} >\r\n            <Link className=\"userLink\" to={`${url}/${id}`}>Name: {name} Username: {username}</Link>\r\n          </p> )}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      userData: state.userList\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch => {\r\n    return{\r\n      fetchUsers: () => dispatch(fetchUsers())\r\n    }\r\n  }\r\n  export default connect(mapStateToProps, mapDispatchToProps)(Users)","export const startFetchUsers = () => {\r\n    return {\r\n        type: \"FETCH_USERS_REQUEST\"\r\n    }\r\n}\r\n\r\nexport const successFetchUsers = (data) => {\r\n    return {\r\n        type: \"FETCH_USERS_SUCCESS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const failFetchUsers = (error) => {\r\n    return {\r\n        type: \"FETCH_USERS_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchUsers = () => {\r\n    return function (dispatch){\r\n        dispatch(startFetchUsers())\r\n        return fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json())\r\n        .then(json => dispatch(successFetchUsers(json)) )\r\n        .catch(error => dispatch(failFetchUsers(error)))\r\n    }\r\n}","import  React  from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport Users from './Users';\r\n\r\nexport default function UserList() {\r\n  return(\r\n      <Switch>\r\n        <Route exact path=\"/userList\" component={Users} />\r\n        <Route path=\"/userList/:id\" component={UserInfo} />\r\n      </Switch>\r\n  )\r\n}  \r\n  ","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <nav>\r\n          <ul className=\"nav\">\r\n            <li className=\"nav__item\">\r\n              <Link className=\"nav__link\" to=\"/\">Posts List</Link>\r\n            </li>\r\n            <li className=\"nav__item\">\r\n              <Link className=\"nav__link\" to=\"/toDoList\">To do List</Link>\r\n            </li>\r\n            <li className=\"nav__item\">\r\n              <Link className=\"nav__link\" to=\"/userList\">User List</Link>\r\n            </li>\r\n            <li className=\"nav__item\">\r\n              <Link className=\"nav__link\" to=\"/form\">Form</Link>\r\n            </li>\r\n          </ul>\r\n          <hr></hr>\r\n        </nav>\r\n    )\r\n}\r\n\r\n ","import  React  from \"react\";\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\n     \r\nexport default function Forms ({ handleSubmit, submit })  {\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit(submit)}>\r\n       <div>\r\n        <label htmlFor=\"firstName\">User Id</label>\r\n        <Field name=\"userId\" component=\"input\" type=\"text\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Title</label>\r\n        <Field name=\"title\" component=\"input\" type=\"text\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Body</label>\r\n        <Field name=\"body\" component=\"input\" type=\"text\" />\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nForms = reduxForm({\r\n    form: 'addPostItem'\r\n})(Forms)\r\n\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFormValues } from \"redux-form\";\r\n\r\nconst FormValues = ({ values }) =>\r\n  <div>\r\n    <pre>\r\n    {values ? JSON.stringify(values, null, 2) : String(values)}\r\n    </pre>\r\n  </div>;\r\n\r\nconst selector = getFormValues('addPostItem');\r\nexport default connect(state => ({\r\n  values: selector(state, 'addPostItem')\r\n}))(FormValues);\r\n\r\n//formValueSelector\r\n//getFormValues","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport PostsList from './components/PostList';\r\nimport ToDoList from './components/ToDoList';\r\nimport UserList from './components/UserList';\r\nimport  Navigation  from \"./components/Navigation\";\r\nimport  Form  from \"./components/Form\";\r\nimport FormValues from \"./components/formValues\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <Navigation />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <PostsList />\r\n            </Route>\r\n            <Route path=\"/toDoList\">\r\n              <ToDoList />\r\n            </Route>\r\n            <Route path=\"/userList\">\r\n              <UserList />\r\n            </Route>\r\n            <Route path=\"/form\">\r\n              <Form />\r\n              <FormValues />\r\n            </Route>\r\n          </Switch> \r\n        </Router>\r\n      )\r\n}","const initialState = {\r\n    loading: false,\r\n    posts: [],\r\n    error: null\r\n}\r\n\r\nconst addPostReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"FETCH_POSTS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case \"FETCH_POSTS_SUCCESS\":\r\n            return {\r\n                loading: false, \r\n                posts: action.payload,\r\n                error: '' \r\n            }\r\n        case \"FETCH_POSTS_ERROR\":\r\n            return { \r\n                loading: false,\r\n                posts: [],\r\n                error: action.payload \r\n            }\r\n        case \"ADD_POST\":\r\n            return{\r\n                loading: false,\r\n                posts:[...state.posts, action.payload],\r\n                error: ''\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default addPostReducer;","const initialState = {\r\n    loading: false,\r\n    todos: [],\r\n    error: null\r\n}\r\n\r\nconst addToDoReducer = (state = initialState, action ) =>{\r\n    switch(action.type){\r\n        case \"FETCH_TODOS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case \"FETCH_TODOS_SUCCESS\":\r\n            return {\r\n                loading: false,\r\n                todos: action.payload,\r\n                error: ''\r\n            }\r\n        case \"FETCH_TODOS_ERROR\":\r\n            return{\r\n                loading: false,\r\n                todos: [],\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default addToDoReducer;","const initialState = {\r\n    loading: false,\r\n    users: [],\r\n    error: null\r\n}\r\n\r\nconst addUserReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FETCH_USERS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case \"FETCH_USERS_SUCCESS\":\r\n            return {\r\n                loading: false,\r\n                users: action.payload,\r\n                error: ''\r\n            }\r\n        case \"FETCH_USERS_ERROR\":\r\n            return {\r\n                loading: false,\r\n                users: [],\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default addUserReducer;","const initialState = {\r\n    user: []\r\n}\r\n\r\nconst getUserInfoReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_INFO\":\r\n            return {\r\n                ...state,\r\n                user: [action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default getUserInfoReducer;","const initialState = []\r\n\r\nconst getUserPostsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_USER_POSTS\":\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default getUserPostsReducer;","const initialState = [];\r\n\r\nconst getUserAlbumsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_USER_ALBUMS\":\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default getUserAlbumsReducer;\r\n","import { getUserToDo } from \"../actions/getUserToDoAction\";\r\n\r\nconst initialState = [];\r\n\r\nconst getUserToDoReducer = (state = initialState, action ) => {\r\n    switch(action.type){\r\n        case \"GET_USER_TODO\":\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default getUserToDoReducer;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport addPostReducer from './addPost';\r\nimport addToDoReducer from './addToDo';\r\nimport addUserReducer from './addUser';\r\nimport getUserInfoReducer from './getUserInfoReducer';\r\nimport  getUserPostsReducer  from \"./getUserPostsReducer\";\r\nimport getUserAlbumsReducer from './getUserAlbumsReducer';\r\nimport getUserToDoReducer from './getUserToDoReducer'\r\n\r\n\r\nconst allReducers = combineReducers({\r\n    postList: addPostReducer,\r\n    toDoList: addToDoReducer,\r\n    userList: addUserReducer,\r\n    form: formReducer,\r\n    userInfo: getUserInfoReducer,\r\n    userAlbums: getUserAlbumsReducer,\r\n    userPosts: getUserPostsReducer,\r\n    userToDo: getUserToDoReducer\r\n})\r\n\r\nexport default allReducers;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../src/index.scss'\r\nimport App from './App';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport allReducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root'));\r\n\r\n\r\n  "],"sourceRoot":""}